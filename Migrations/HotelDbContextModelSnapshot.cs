// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelManagement.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReservationCheckInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationCheckOutDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservationCustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ReservationIsCancelled")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ReservationTotalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("ReservationId");

                    b.HasIndex("ReservationCustomerId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("RoomPrice")
                        .HasColumnType("REAL");

                    b.Property<decimal>("RoomRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("RoomReservation", b =>
                {
                    b.Property<int>("RoomReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomReservationReservationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomReservationRoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoomReservationId");

                    b.HasIndex("RoomReservationReservationId");

                    b.HasIndex("RoomReservationRoomId");

                    b.ToTable("RoomReservations");
                });

            modelBuilder.Entity("Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StaffEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffPosition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.HasOne("Customer", "ReservationCustomer")
                        .WithMany()
                        .HasForeignKey("ReservationCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservationCustomer");
                });

            modelBuilder.Entity("RoomReservation", b =>
                {
                    b.HasOne("Reservation", "RoomReservationReservation")
                        .WithMany("ReservationRoomReservations")
                        .HasForeignKey("RoomReservationReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Room", "RoomReservationRoom")
                        .WithMany("RoomReservations")
                        .HasForeignKey("RoomReservationRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomReservationReservation");

                    b.Navigation("RoomReservationRoom");
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.Navigation("ReservationRoomReservations");
                });

            modelBuilder.Entity("Room", b =>
                {
                    b.Navigation("RoomReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
